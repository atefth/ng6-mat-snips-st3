<snippet>
	<content><![CDATA[
		import { ${2:moduleOrComponent} } from '${1:path}';
		$0
	]]></content >
	<tabTrigger>ngImport</tabTrigger>
</snippet>
<snippet>
	<content><![CDATA[
		import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
		import { enableProdMode } from '@angular/core';
		import { AppModule } from './app/app.module';

		if (environment.production) {
			tenableProdMode();
		}
		platformBrowserDynamic()
		.bootstrapModule(AppModule)
		.then(success => console.log('Bootstrap success'))
		.catch(err => console.error(err));
		
		export const environment = {
			production: false
		};
	]]></content >
	<tabTrigger>ngBootstrap</tabTrigger>
</snippet>
<snippet>
	<content><![CDATA[
		import { Injectable } from '@angular/core';
		
		@Injectable()
		export class ${Name}Service {$0}
	]]></content >
	<tabTrigger>ngService</tabTrigger>
</snippet>
<snippet>
	<content><![CDATA[
		import { Injectable } from '@angular/core';
		import { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';
		
		@Injectable()
		export class ${1:Name}Interceptor implements HttpInterceptor {
			intercept(req: HttpRequest<any>, next: HttpHandler) {
				return next.handle(req);
			}
		}
	]]></content >
	<tabTrigger>ngHttpInterceptor</tabTrigger>
</snippet>
