<snippet>
  <content><![CDATA[
  "Angular Ngxs State": {
    "prefix": "ngxs-state",
    "description": "Ngxs State",
    "types": "typescript",
    "body": [
      "import { State } from '@ngxs/store';",
      "import { ${Name}StateModel } from './${name}.model';",
      "",
      "@State<${Name}StateModel>({",
      "\tdefaults: {",
      "\t}",
      "})",
      "export class ${Name}State {}",
      "$0"
    ]
  } 
  ]]></content >
  <tabTrigger>ngXsState</tabTrigger>
</snippet>
<snippet>
  <content><![CDATA[
  "Angular Ngxs State Model": {
    "prefix": "ngxs-state-model",
    "description": "Ngxs State Model",
    "types": "typescript",
    "body": [
      "export interface ${Name}StateModel {$1",
      "}",
      "$0"
    ]
  } 
  ]]></content >
  <tabTrigger>ngXsState-model</tabTrigger>
</snippet>
<snippet>
  <content><![CDATA[
  "Angular Ngxs Action": {
    "prefix": "ngxs-action",
    "description": "Ngxs Action",
    "types": "typescript",
    "body": [
      "export class ${Action} {",
      "\tstatic readonly type = '[${FileName}] ${Action}]';",
      "}",
      "$0"
    ]
  } 
  ]]></content >
  <tabTrigger>ngXsAction</tabTrigger>
</snippet>
<snippet>
  <content><![CDATA[
  "Angular Ngxs Action With Payload": {
    "prefix": "ngxs-action-payload",
    "description": "Ngxs Action with Payload",
    "types": "typescript",
    "body": [
      "export class ${Action} {",
      "\tstatic readonly type = '[${FileName}] ${Action}]';",
      "\tconstructor(public readonly payload?: ${type:any}) {}",
      "}",
      "$0"
    ]
  } 
  ]]></content >
  <tabTrigger>ngXsAction-payload</tabTrigger>
</snippet>
<snippet>
  <content><![CDATA[
  "Angular Ngxs Store": {
    "prefix": "ngxs-store",
    "description": "Ngxs Store",
    "types": "typescript",
    "body": [
      "NgxsModule.forRoot([",
      "\t${Name}State",
      "])",
      "NgxsReduxDevtoolsPluginModule.forRoot(),",
      "NgxsLoggerPluginModule.forRoot()$0"
    ]
  } 
  ]]></content >
  <tabTrigger>ngXsStore</tabTrigger>
</snippet>
<snippet>
  <content><![CDATA[
  "Angular Ngxs Import Store": {
    "prefix": "ngxs-store-import",
    "description": "Ngxs Import Store",
    "types": "typescript",
    "body": [
      "import { NgxsModule } from '@ngxs/store';",
      "import { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';",
      "import { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';",
      "import { ${Name}State } from './${path}/${name}.state';",
      "$0"
    ]
  } 
  ]]></content >
  <tabTrigger>ngXsStore-import</tabTrigger>
</snippet>
<snippet>
  <content><![CDATA[
  "Angular Ngxs Select Store": {
    "prefix": "ngxs-select",
    "description": "Ngxs Select Store",
    "types": "typescript",
    "body": [
      "import { Select } from '@ngxs/store';",
      "",
      "import { ${Name} State } from './${name}.state';",
      "import { ${action} } from './${action}.actions';",
      "",
      "@Component({ ... })",
      "export class ${Name}Component {",
      " // Reads the name of the store from the store class",
      " @Select(${Name}State) ${action}$: Observable<${type}>;",
      "}",
      "$0"
    ]
  } 
  ]]></content >
  <tabTrigger>ngXsStore-select</tabTrigger>
</snippet>