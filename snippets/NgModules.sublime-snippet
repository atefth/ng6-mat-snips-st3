<snippet>
	<content><![CDATA[
		import { NgModule } from '@angular/core';
		import { CommonModule } from '@angular/common';
		
		@NgModule({
			declarations: [],
			imports: [ CommonModule ],
			exports: [],
			providers: [],
		})
		export class ${Sub}Module {}
	]]></content >
	<tabTrigger>ngModule</tabTrigger>
	<scope>*.ts</scope>
	<description>NgModule</description>
</snippet >
<snippet>
	<content><![CDATA[
		import { NgModule } from '@angular/core';
		import { BrowserModule } from '@angular/platform-browser';
		import { ${App}Component }  from './${app}.component';
		
		@NgModule({
			declarations: [ ${App}Component ],
			imports: [ BrowserModule ],
			providers: [],
			bootstrap: [ ${App}Component ]
		})
		export class ${App}Module {}
	]]></content >
	<tabTrigger>ngApp</tabTrigger>
	<scope>*.ts</scope>
	<description>NgModule for app</description>
</snippet >
<snippet>
	<content><![CDATA[
		import { NgModule } from '@angular/core';
		import { BrowserModule } from '@angular/platform-browser';
		import { RouterModule } from '@angular/router';
		import { StoreModule } from '@ngrx/store';
		import { RouterStoreModule } from '@ngrx/router-store';
		import { StoreDevtoolsModule } from '@ngrx/store-devtools';
		import { ${App}Component }  from './${app}.component';
		
		import { routes } from './routes';
		import { reducer } from './reducers';
		
		@NgModule({
			declarations: [ ${App}Component ],
			imports: [
				BrowserModule,
				RouterModule.forRoot(routes, { useHash: true }),
				StoreModule.provideStore(reducer),
				RouterStoreModule.connectRouter(),
				StoreDevtoolsModule.instrumentOnlyWithExtension(),
			],
			providers: [],
			bootstrap: [ ${App}Component ]
		})
		export class ${App}Module {}
	]]></content >
	<tabTrigger>ngRxjx</tabTrigger>
</snippet >
<snippet>
	<content><![CDATA[
		import { Observable } from 'rxjs';
		$0
	]]></content >
	<tabTrigger>ngImportObservable</tabTrigger>
</snippet >
<snippet>
	<content><![CDATA[
		import { Subject } from 'rxjs';
		$0
	]]></content >
	<tabTrigger>ngImportSubject</tabTrigger>
</snippet >
<snippet>
	<content><![CDATA[
		import { ${1:switchMap} } from 'rxjs/operators';
		$0
	]]></content >
	<tabTrigger>ngImportOperator</tabTrigger>
</snippet >
