<snippet>
  <content><![CDATA[
  "Register Service Worker": {
    "prefix": "sw-register",
    "description": "Register Service Worker",
    "types": "typescript, javascript",
    "body": [
      "if ('serviceWorker' in navigator) {",
      "\twindow.addEventListener('load', () => {",
      "\tnavigator.serviceWorker.register('/sw.js');",
      "});",
      "}$0"
    ]
  } 
  ]]></content >
  <tabTrigger>ngServiceWorker</tabTrigger>
</snippet>
<snippet>
  <content><![CDATA[
  "Register Service Worker and Check": {
    "prefix": "sw-register-and-check",
    "description": "Register Service Worker and Check",
    "types": "typescript, javascript",
    "body": [
      "if ('serviceWorker' in navigator) {",
      "if('serviceWorker' in window.navigator) {",
      "\twindow.addEventListener('load', () => {",
      "\t\twindow.navigator.serviceWorker.register('/sw.js', { scope: '/' }).then((registration) => {",
      "\t\t\tconsole.log('ServiceWorker registration successful with scope: ', registration.scope);",
      "\t\t}).catch((error) => {",
      "\t\t\tconsole.error('ServiceWorker registration failed: ', error);",
      "\t\t});",
      "\t});",
      "}$0"
    ]
  } 
  ]]></content >
  <tabTrigger>ngServiceWorker-check</tabTrigger>
</snippet>
<snippet>
  <content><![CDATA[
  "PWA Link manifest": {
    "prefix": "pwa-link-manifest",
    "description": "PWA Link Manifest",
    "types": "html",
    "body": [
      "<link rel=\"manifest\" href=\"./manifest.json\">$0"
    ]
  } 
  ]]></content >
  <tabTrigger>ngPWA</tabTrigger>
</snippet>
