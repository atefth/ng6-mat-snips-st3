<snippet>
  <content><![CDATA[
  "Angular Sub Module": {
    "prefix": "ng-module",
    "description": "Sub Module",
    "types": "typescript",
    "body": [
      "import { NgModule } from '@angular/core';",
      "import { CommonModule } from '@angular/common';",
      "",
      "@NgModule({",
      "\tdeclarations: [],",
      "\timports: [ CommonModule ],",
      "\texports: [],",
      "\tproviders: [],",
      "})",
      "export class ${Sub}Module {}"
    ]
  }
  ]]></content >
	<tabTrigger>ngModule</tabTrigger>
	<scope>*.ts</scope>
	<description>NgModule</description>
</snippet >
<snippet>
  <content><![CDATA[
  "Angular App Module": {
    "prefix": "ng-module-root",
    "description": "App module",
    "types": "typescript",
    "body": [
      "import { NgModule } from '@angular/core';",
      "import { BrowserModule } from '@angular/platform-browser';",
      "import { ${App}Component }  from './${app}.component';",
      "",
      "@NgModule({",
      "\tdeclarations: [ ${App}Component ],",
      "\timports: [ BrowserModule ],",
      "\tproviders: [],",
      "\tbootstrap: [ ${App}Component ]",
      "})",
      "export class ${App}Module {}"
    ]
  }
  ]]></content >
	<tabTrigger>ngApp</tabTrigger>
	<scope>*.ts</scope>
	<description>NgModule for app</description>
</snippet >
<snippet>
  <content><![CDATA[
  "Angular ngRx Root Module": {
    "prefix": "ngrx-module",
    "description": "ngRx Root Module",
    "types": "typescript",
    "body": [
      "import { NgModule } from '@angular/core';",
      "import { BrowserModule } from '@angular/platform-browser';",
      "import { RouterModule } from '@angular/router';",
      "import { StoreModule } from '@ngrx/store';",
      "import { RouterStoreModule } from '@ngrx/router-store';",
      "import { StoreDevtoolsModule } from '@ngrx/store-devtools';",
      "import { ${App}Component }  from './${app}.component';",
      "",
      "import { routes } from './routes';",
      "import { reducer } from './reducers';",
      "",
      "@NgModule({",
      "\tdeclarations: [ ${App}Component ],",
      "\timports: [",
      "\t\tBrowserModule,",
      "\t\tRouterModule.forRoot(routes, { useHash: true }),",
      "\t\tStoreModule.provideStore(reducer),",
      "\t\tRouterStoreModule.connectRouter(),",
      "\t\tStoreDevtoolsModule.instrumentOnlyWithExtension(),",
      "\t],",
      "\tproviders: [],",
      "\tbootstrap: [ ${App}Component ]",
      "})",
      "export class ${App}Module {}"
    ]
  }
  ]]></content >
  <tabTrigger>ngRxjx</tabTrigger>
</snippet >
<snippet>
  <content><![CDATA[
  "RxJS Import Observable": {
    "prefix": "rx-import-observable",
    "description": "RxJS Import Observable",
    "types": "typescript, javascript",
    "body": [
      "import { Observable } from 'rxjs';",
      "$0"
    ]
  }
  ]]></content >
  <tabTrigger>ngImportObservable</tabTrigger>
</snippet >
<snippet>
  <content><![CDATA[
  "RxJS Import Subject": {
    "prefix": "rx-import-observable",
    "description": "RxJS Import Subject",
    "types": "typescript, javascript",
    "body": [
      "import { Subject } from 'rxjs';",
      "$0"
    ]
  }}
  ]]></content >
  <tabTrigger>ngImportSubject</tabTrigger>
</snippet >
<snippet>
  <content><![CDATA[
  "RxJS Import an Operator": {
    "prefix": "rx-import-operator",
    "description": "RxJS Import Add Operator",
    "types": "typescript, javascript",
    "body": [
      "import { ${1:switchMap} } from 'rxjs/operators';",
      "$0"
    ]
  }}
  ]]></content >
  <tabTrigger>ngImportOperator</tabTrigger>
</snippet >
